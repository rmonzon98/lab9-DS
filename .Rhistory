}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
library(dplyr)
shiny::runApp()
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
runApp()
runApp()
runApp()
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
install.packages(rjsonio)
install.packages("rjsonio")
install.packages("RJSONIO")
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
install.packages("rjson")
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
install.packages("geojson")
install.packages("geojson")
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
install.packages("geojsonio")
install.packages("geojsonio")
(.packages())
library(geojsonio)
library(geojsonio)
library(rjson)
library(leaflet)
library(reshape)
library(dplyr)
(.packages())
library(leaflet)
library(reshape)
library(dplyr)
library(geojsonio)
covid <- read.csv("fxm.csv")
geojson <- readLines("lab3BD.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON()
geojson$style = list(
weight = 1,
color = "#555555",
opacity = 1,
fillOpacity = 0.8
)
covid_cases <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
})
population <- sapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
})
# Color by per-capita GDP using quantiles
pal <- colorQuantile("Greens", (covid_cases / population) * 10000)
# Add a properties$style list to each feature
geojson$features <- lapply(geojson$features, function(feat) {
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept<-subset(by_dept, grepl('^\\d+$', by_dept$poblacion))[c("poblacion")]
pop = max(sum(as.numeric(unlist(by_dept[c("poblacion")]))), 1)
name = toupper(feat$properties$departamentos)
by_dept<-filter(covid, departamento==name)
by_dept[1:5] <- list(NULL)
cases = if(nrow(by_dept) > 0) {
melted_by_dept <- melt(by_dept)
summed = sum(melted_by_dept[c("value")])
feat$properties$covid_cases <- summed
} else {
feat$properties$covid_cases <- 0
0
}
feat$properties$style <- list(
fillColor = pal(
( cases / pop) * 10000
)
)
feat
})
leaflet() %>% addGeoJSON(geojson)
shiny::runApp()
library(geojsonio)
library(rjson)
library(shiny)
library(reshape)
library(DT)
library(dplyr)
library(ggplot2)
library(leaflet)
(.packages())
runApp()
(.packages())
runApp('C:/Users/User/Desktop/Data science/ejemplo')
library(shinydashboard)
(.packages())
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp()
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp()
runApp()
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/User/Desktop/Data science/ejemplo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shiny)
library(reshape)
library(DT)
library(dplyr)
library(ggplot2)
library(leaflet)
library(geojsonio)
runApp()
runApp()
(.packages())
install.packages("geojsonio")
install.packages("geojsonio")
library(shiny)
library(reshape)
library(DT)
library(dplyr)
library(ggplot2)
library(leaflet)
library(geojsonio)
runApp()
runApp()
runApp()
library(geojsonio)
library(rjson)
library(leaflet)
library(reshape)
library(dplyr)
runApp()
library(shinydashboard)
library(leaflet.extras)
runApp()
runApp()
runApp()
library(shiny)
library(shinythemes)
library(reshape)
library(DT)
library(dplyr)
library(ggplot2)
library(leaflet)
library(rjson)
library(geojsonio)
library(shinydashboard)
library(leaflet.extras)
runApp()
library(shiny)
library(shinythemes)
library(reshape)
library(DT)
library(dplyr)
library(ggplot2)
library(leaflet)
library(rjson)
library(geojsonio)
library(shinydashboard)
library(leaflet.extras)
runApp()
runApp()
